{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","type","onBlur","updateUserStatus","onChange","e","currentTarget","autoFocus","onDoubleClick","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","alt","Post","item","message","likesCount","MyPosts","memo","postsElements","posts","map","post","id","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostText","maxLength50","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getUserStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.5651ac43.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Redirect to=\"/login\"/>\r\n      }\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToProps)(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3U1Nr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__Osdiq\",\"posts\":\"MyPosts_posts__2OfCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__12Peo\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  }\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editMode: true\r\n    })\r\n  }\r\n\r\n  deactivateEditMode = () => {\r\n    this.setState({\r\n      editMode: false\r\n    })\r\n    this.props.updateUserStatus(this.state.status)\r\n  }\r\n\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.state.editMode\r\n          ? (\r\n            <div>\r\n              <span\r\n                onDoubleClick={this.activateEditMode}\r\n              >{this.props.status || 'Empty'}</span>\r\n            </div>\r\n          )\r\n          : (\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.status}\r\n                autoFocus={true}\r\n                onBlur={this.deactivateEditMode}\r\n                onChange={this.onStatusChange}\r\n              />\r\n            </div>\r\n          )\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfileStatus","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateUserStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!editMode\r\n        ? (\r\n          <div>\r\n              <span\r\n                onDoubleClick={activateEditMode}\r\n              >{props.status || 'Empty'}</span>\r\n          </div>\r\n        )\r\n        : (\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              onBlur={deactivateEditMode}\r\n              onChange={onStatusChange}\r\n              value={status}\r\n              autoFocus={true}\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloder\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader/>\r\n  }\r\n  return (\r\n    <div>\r\n      {/*<div>*/}\r\n      {/*  <img alt=\"\" src=\"https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350\" />*/}\r\n      {/*</div>*/}\r\n      <div className={s.descriptionBlock}>\r\n        <img src={props.profile.photos.large} alt=\"\"/>\r\n        <ProfileStatusWithHooks\r\n          status={props.status}\r\n          updateUserStatus={props.updateUserStatus}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://lh3.googleusercontent.com/proxy/ZD6CwISLQAhBcnuhTrVTXmvzDPNyKBb0iTmJkBPpqI0Xi_nTEE0DcGuEjqONOol2z1LB1ZFgCEuB1fvfT6o49L8Eh-qYTrtwL9d9TwWSvvFxLHuAgMrp3w\" alt=\"\"/>\r\n      {props.message}\r\n      <div>\r\n        <span>like</span>\r\n        {props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsElements = props.posts.map(\r\n    post => <Post key={post.id} message={post.message} likesCount={post.likesCount}/>\r\n  )\r\n\r\n  const addNewPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <AddPostFormRedux\r\n          onSubmit={addNewPost}\r\n        />\r\n      </div>\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nconst maxLength50 = maxLengthCreator(10)\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name=\"newPostText\"\r\n        placeholder=\"Enter your post message\"\r\n        validate={[required, maxLength50]}\r\n      />\r\n      <button>\r\n        add Post\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n  form: 'addPostForm'\r\n})(AddPostForm)\r\n\r\nexport default MyPosts","import React from 'react'\r\nimport {addPostActionCreator} from \"../../../redux/profile-reduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer","import ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateUserStatus={props.updateUserStatus}\r\n      />\r\n      <MyPostsContainer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../redux/profile-reduser\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n    }\r\n\r\n    this.props.getUserProfile(userId)\r\n    this.props.getUserStatus(userId)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}